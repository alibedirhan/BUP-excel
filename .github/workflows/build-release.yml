name: Build and Release

on:
  push:
    tags:
      - 'v*'  # v1.0.0, v2.1.0 etc.
  workflow_dispatch:  # Manuel tetikleme için

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Create executable with PyInstaller
      run: |
        pyinstaller --onefile --windowed --icon=assets/icon.ico --name=CAL-Excel main.py
        
    - name: Create portable package
      run: |
        mkdir CAL-Excel-Portable
        copy dist\CAL-Excel.exe CAL-Excel-Portable\
        copy README.md CAL-Excel-Portable\
        copy requirements.txt CAL-Excel-Portable\
        echo "CAL Excel Karşılaştırma Uygulaması" > CAL-Excel-Portable\OKUBENI.txt
        echo "Kullanım: CAL-Excel.exe dosyasını çift tıklayın" >> CAL-Excel-Portable\OKUBENI.txt
        
    - name: Create ZIP archive
      run: |
        powershell Compress-Archive -Path CAL-Excel-Portable -DestinationPath CAL-Excel-Windows-v${{ github.ref_name }}.zip
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4  # GÜNCELLENDİ: v3 -> v4
      with:
        name: CAL-Excel-Windows
        path: |
          dist/CAL-Excel.exe
          CAL-Excel-Windows-*.zip
          
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Create executable with PyInstaller
      run: |
        pyinstaller --onefile --name=CAL-Excel main.py
        
    - name: Create portable package
      run: |
        mkdir CAL-Excel-Linux
        cp dist/CAL-Excel CAL-Excel-Linux/
        cp README.md CAL-Excel-Linux/
        cp requirements.txt CAL-Excel-Linux/
        echo "#!/bin/bash" > CAL-Excel-Linux/run.sh
        echo "./CAL-Excel" >> CAL-Excel-Linux/run.sh
        chmod +x CAL-Excel-Linux/run.sh
        chmod +x CAL-Excel-Linux/CAL-Excel
        
    - name: Create TAR archive
      run: |
        tar -czf CAL-Excel-Linux-${{ github.ref_name }}.tar.gz CAL-Excel-Linux/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4  # GÜNCELLENDİ: v3 -> v4
      with:
        name: CAL-Excel-Linux
        path: |
          dist/CAL-Excel
          CAL-Excel-Linux-*.tar.gz

  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4  # GÜNCELLENDİ: v3 -> v4
      with:
        name: CAL-Excel-Windows
        path: ./artifacts/windows/
        
    - name: Download Linux artifacts
      uses: actions/download-artifact@v4  # GÜNCELLENDİ: v3 -> v4
      with:
        name: CAL-Excel-Linux
        path: ./artifacts/linux/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1  # NOT: Bu aksiyon hala geçerli
      with:
        files: |
          artifacts/windows/CAL-Excel-Windows-*.zip
          artifacts/linux/CAL-Excel-Linux-*.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}